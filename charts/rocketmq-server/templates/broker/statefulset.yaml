apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "rocketmq.broker.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: broker
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.broker.replicaCount }}
  podManagementPolicy: {{ .Values.broker.podManagementPolicy | quote }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.broker.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: broker
  serviceName: {{ include "rocketmq.broker.fullname" . }}
  {{- if .Values.broker.updateStrategy }}
  updateStrategy: {{- toYaml .Values.broker.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.broker.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.broker.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: broker
    spec:
      {{- include "rocketmq.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: {{ .Values.broker.automountServiceAccountToken }}
      {{- if .Values.broker.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.broker.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.broker.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.broker.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.broker.podAffinityPreset "component" "broker" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.broker.podAntiAffinityPreset "component" "broker" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.broker.nodeAffinityPreset.type "key" .Values.broker.nodeAffinityPreset.key "values" .Values.broker.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.broker.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.broker.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.broker.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.broker.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.broker.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.broker.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.broker.priorityClassName }}
      priorityClassName: {{ .Values.broker.priorityClassName }}
      {{- end }}
      {{- if .Values.broker.schedulerName }}
      schedulerName: {{ .Values.broker.schedulerName }}
      {{- end }}
      {{- if .Values.broker.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.broker.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
        - name: initializer
          image: {{ include "rocketmq.image" .  }}
          env:
            - name: NEW_ROCKETMQ_HOME
              value: {{ include "rocketmq.broker.home" . }}
            - name: PLAIN_ACL_CONTENT
              value: |
                {{- include "rocketmq.broker.plainAclFile" . | nindent 16 }}
            - name: TOOLS_CONTENT
              value: |
                {{- include "rocketmq.broker.toolsFile" . | nindent 16 }}
          command: 
            - sh
            - -ec
            - |
              cp -r ${ROCKETMQ_HOME}/* ${NEW_ROCKETMQ_HOME}
              mkdir -p ${NEW_ROCKETMQ_HOME}/conf/acl
              printf "${PLAIN_ACL_CONTENT}" > ${NEW_ROCKETMQ_HOME}/conf/plain_acl.yml
              printf "${TOOLS_CONTENT}" > ${NEW_ROCKETMQ_HOME}/conf/tools.yml
          volumeMounts:
            - name: empty-dir
              mountPath: {{ include "rocketmq.broker.home" . }}
      containers:
        - name: broker
          image: {{ include "rocketmq.image" .  }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.broker.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.broker.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.broker.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.broker.command "context" $) | nindent 12 }}
          {{- else }}
          command: [ "/bin/sh" ]
          {{- end }}
          {{- if .Values.broker.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.broker.args "context" $) | nindent 12 }}
          {{- else }}
          args: [ "-c", "cd ${ROCKETMQ_HOME}/bin && ./mqbroker -c ${ROCKETMQ_HOME}/conf/${POD_NAME}.conf --enable-proxy" ]
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESRV_ADDR
              value: {{ include "rocketmq.namesrv.addr" . | quote }}
            - name: ROCKETMQ_HOME
              value: {{ include "rocketmq.broker.home" . }}
            {{- if .Values.broker.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.broker.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.broker.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.broker.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.broker.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.broker.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: broker
              containerPort: {{ .Values.broker.containerPorts.broker }}
              protocol: TCP
            - name: fa
              containerPort: 10909
              protocol: TCP
            - name: ha
              containerPort: 10912
              protocol: TCP
            - name: proxy
              containerPort: 8081
              protocol: TCP
            {{- if .Values.broker.extraPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.broker.extraPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.broker.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.broker.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.broker.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.broker.livenessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: broker   
            initialDelaySeconds: {{ .Values.broker.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.broker.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.broker.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.broker.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.broker.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.broker.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.broker.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.broker.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.broker.readinessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: broker   
            initialDelaySeconds: {{ .Values.broker.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.broker.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.broker.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.broker.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.broker.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.broker.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.broker.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.broker.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.broker.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: broker
            initialDelaySeconds: {{ .Values.broker.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.broker.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.broker.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.broker.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.broker.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.broker.resources }}
          resources: {{ toYaml .Values.broker.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: {{ include "rocketmq.broker.home" . }}
            {{- include "rocketmq.broker.configVolumeMounts" (dict "context" $) | nindent 12 }}
            - name: data
              mountPath: {{ .Values.broker.storePathRootDir }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "rocketmq.broker.configMapName" . }}
  {{- if not .Values.broker.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if .Values.broker.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ tpl .Values.broker.persistence.existingClaim . }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 10 }}
          app.kubernetes.io/component: broker
        {{- if or .Values.broker.persistence.annotations .Values.commonAnnotations }}
        {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list  .Values.broker.persistence.annotations .Values.commonAnnotations ) "context" . ) }}
        annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.broker.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.broker.persistence.size | quote }}
        {{- include "common.storage.class" (dict "persistence" .Values.broker.persistence "global" .Values.global) | nindent 8 }}
        {{- if .Values.broker.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.broker.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
  {{- if .Values.broker.persistentVolumeClaimRetentionPolicy.enabled }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.broker.persistentVolumeClaimRetentionPolicy.whenDeleted }}
    whenScaled: {{ .Values.broker.persistentVolumeClaimRetentionPolicy.whenScaled }}
  {{- end }}
  {{- end }}