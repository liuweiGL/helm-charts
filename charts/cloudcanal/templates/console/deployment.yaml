apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "common.names.fullname" .) "console"}}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: console
  {{- if or .Values.console.annotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.console.annotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.console.replicaCount }}
  {{- if .Values.console.updateStrategy }}
  strategy: {{- toYaml .Values.console.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.console.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: console
  template:
    metadata:
      {{- if .Values.console.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.console.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: console
    spec:
      {{- include "cloudcanal.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: {{ .Values.console.automountServiceAccountToken }}
      {{- if .Values.global.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.global.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.console.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.console.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.console.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.console.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.console.priorityClassName }}
      priorityClassName: {{ .Values.console.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.console.schedulerName }}
      schedulerName: {{ .Values.console.schedulerName | quote }}
      {{- end }}
      {{- if .Values.console.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.console.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.console.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.console.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.console.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.console.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        - name: prepare-workspace
          image: {{ include "cloudcanal.console.image" . }}
          imagePullPolicy: {{ .Values.console.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              cp -r /home/eastcoal-docker/* /workspace
              chmod -R 777 /workspace
              chown -R clougence:clougence /workspace
              console_conf_dir="/workspace/cloudcanal/console/conf"
              if [ ! -d $console_conf_dir ]; then
                mkdir -p $console_conf_dir
              fi
              cp /conf/business-output.properties $console_conf_dir/business-output.properties
              cat $console_conf_dir/business-output.properties
            
          volumeMounts:
            - name: empty-dir
              mountPath: /workspace
            - name: console-conf
              mountPath: /conf
      containers:
        - name: console
          image: {{ template "cloudcanal.console.image" . }}
          imagePullPolicy: {{ .Values.console.image.pullPolicy }}
          {{- if .Values.console.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.console.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.console.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.console.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.console.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.console.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            # - name: TZ
            #   value: Asia/Shanghai
            {{- if .Values.console.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.console.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.console.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.console.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.console.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.console.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.console.resources }}
          resources: {{- toYaml .Values.console.resources | nindent 12 }}
          {{- else if ne .Values.console.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.console.resourcesPreset) | nindent 12 }}
          {{- end }}
          ports:
            - name: console
              containerPort: {{ .Values.console.containerPorts.console }}
            - name: rsocket
              containerPort: {{ .Values.console.containerPorts.rsocket }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.console.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.console.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.console.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.console.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              port: {{ .Values.console.containerPorts.console }}
              path: /
          {{- end }}
          {{- if .Values.console.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.console.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.console.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.console.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              port: {{ .Values.console.containerPorts.console }}
              path: /
          {{- end }}
          {{- if .Values.console.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.console.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.console.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.console.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              port: {{ .Values.console.containerPorts.console }}
              path: /
          {{- end }}
          {{- end }}
          {{- if .Values.console.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.console.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            # - name: timezone
            #   mountPath: /etc/localtime
            #   readOnly: true
            - name: empty-dir
              mountPath: /home/clougence
          {{- if .Values.console.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.console.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      volumes:
        # - name: timezone
        #   hostPath:
        #     path: /etc/localtime
        - name: empty-dir
          emptyDir: {}
        - name: console-conf
          configMap:
            name: {{ include "cloudcanal.console.configMapName" . }}
            items:
            - key: business-output.properties
              path: business-output.properties
