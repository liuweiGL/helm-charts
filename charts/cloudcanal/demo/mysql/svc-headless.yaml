apiVersion: v1
kind: Service
metadata:
  name: {{ include "cloudcanal.mysql.serviceHeadlessName" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: mysql
  {{- if or .Values.mysql.service.annotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.mysql.service.annotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: mysql
      port: {{ .Values.mysql.service.ports.mysql }}
      {{- if not (eq .Values.mysql.service.ports.mysql .Values.mysql.containerPorts.mysql) }}
      targetPort: {{ .Values.mysql.containerPorts.http }}
      {{- end }}
      protocol: TCP
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.mysql.podLabels .Values.commonLabels) "context" .) | fromYaml }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: mysql
